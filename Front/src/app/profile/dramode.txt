import React, { createContext, useContext, useState, useEffect } from 'react';

// Criar um contexto para o modo escuro
const DarkModeContext = createContext<any>(null);

export const useDarkMode = () => {
  return useContext(DarkModeContext);
};

export const DarkModeProvider: React.FC = ({ children }) => {
  const [darkMode, setDarkMode] = useState(false);

  // Aplicar a classe 'dark' ao <html> quando o estado mudar
  useEffect(() => {
    if (darkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [darkMode]);

  return (
    <DarkModeContext.Provider value={{ darkMode, setDarkMode }}>
      {children}
    </DarkModeContext.Provider>
  );
};




import React from 'react';
import { useDarkMode } from './DarkModeContext';

const DarkModeToggle: React.FC = () => {
  const { darkMode, setDarkMode } = useDarkMode();

  const toggleDarkMode = () => setDarkMode(!darkMode);

  return (
    <button onClick={toggleDarkMode} className="p-2 mb-4 bg-blue-500 text-white rounded">
      {darkMode ? 'Modo Claro' : 'Modo Escuro'}
    </button>
  );
};

export default DarkModeToggle;

import React from 'react';
import { DarkModeProvider } from './DarkModeContext';
import DarkModeToggle from './DarkModeToggle';

const App: React.FC = () => {
  return (
    <DarkModeProvider>
      <div className="min-h-screen bg-white dark:bg-gray-900 text-black dark:text-white">
        <div className="container mx-auto p-4">
          <DarkModeToggle />
          <h1 className="text-4xl">Exemplo de Modo Claro e Escuro com Contexto</h1>
          <p className="mt-4">
            Agora vocÃª pode alternar entre o modo claro e escuro usando o Contexto!
          </p>
        </div>
      </div>
    </DarkModeProvider>
  );
};

export default App;
